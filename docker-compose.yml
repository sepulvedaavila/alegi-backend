version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: alegi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - alegi-network

  mongodb:
    image: mongo:7
    container_name: alegi-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: alegi
    volumes:
      - mongodb_data:/data/db
    networks:
      - alegi-network

  localstack:
    image: localstack/localstack:latest
    container_name: alegi-localstack
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,sqs,lambda,cloudwatch
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=docker
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - alegi-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alegi-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/alegi?authSource=admin
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
    volumes:
      - ./src:/app/src
      - ./api:/app/api
    depends_on:
      - redis
      - mongodb
      - localstack
    networks:
      - alegi-network
    command: npm run dev

  bull-board:
    image: deadly0/bull-board
    container_name: alegi-bull-board
    ports:
      - "3001:3000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - alegi-network

networks:
  alegi-network:
    driver: bridge

volumes:
  redis_data:
  mongodb_data: